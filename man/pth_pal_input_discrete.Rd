% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/palette-io.R
\name{pth_pal_input_discrete}
\alias{pth_pal_input_discrete}
\alias{pth_pal_output_hex}
\title{Create palette-like functions with different inputs, outputs}
\usage{
pth_pal_input_discrete(pal)

pth_pal_output_hex(pal)
}
\arguments{
\item{pal}{\code{function} palette-like function, returns a color}
}
\value{
\describe{
\item{\code{pth_pal_input_discrete()}}{
\code{function} that takes an integer as an input, returns that many colors.}
\item{\code{pth_pal_output_hex()}}{\code{function} that returns hex-codes.}
}
}
\description{
Use these functions to create palette-like functions, but with different
inputs or outputs.

Use \code{pth_pal_input_discrete()} to create a function
that takes an integer as input, rather than a numeric vector.
In other words, it takes a continuous-palette function
and returns a discrete-palette function.

Use \code{pth_pal_output_hex()} to create a function that returns hex-codes,
rather than a matrix. In addition to converting to hex-codes, the returned
will "rescue" out-of-gamut colors by reducing the chroma of such colors to
bring them inside the gamut.

Note that these functions do not require a \code{pth_palette} function, nor does
it return one. This means that these functions take you "off the boat".
Accordingly, you should consider using them as final steps.
}
\examples{
  hex_blue <- c("#e2e2e2", "#9cbaee", "#3c79c0")

  pal_blue <- pth_new_palette_hex(hex_blue)
  pal_blue_discrete <- pth_pal_input_discrete(pal_blue)

  pal_blue_hex <- pth_pal_output_hex(pal_blue)
  pal_blue_discrete_hex <- pth_pal_input_discrete(pal_blue_hex)

  # returns matrix
  pal_blue(seq(0, 1, by = 0.25))

  # takes an integer input, returns matrix
  pal_blue_discrete(5)

  # returns hex-codes
  pal_blue_hex(seq(0, 1, by = 0.25))

  # takes an integer input, returns hex-codes
  pal_blue_discrete_hex(5)

}
