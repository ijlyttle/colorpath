% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_pal.R
\name{as_pal_hex}
\alias{as_pal_hex}
\alias{as_pal_disc}
\title{Coerce to hex-code palette-function}
\usage{
as_pal_hex(pal_luv)

as_pal_disc(pal)
}
\arguments{
\item{pal_luv}{\code{function} with S3 class \code{"cpath_palette_luv"}}

\item{pal}{\code{function} that takes a numeric input and returns a color value.}
}
\value{
\code{function}:
\describe{
\item{\code{as_pal_hex()}}{return a palette function that returns hex-codes.}
\item{\code{as_pal_disc()}}{return a discrete-palette function which takes
an integer input \code{n}, and returns \code{n} equally-distributed values.}
}
}
\description{
The "standard" palette function in this package takes a numeric input
(\verb{0 <= x <=1}) and returns a matrix output (LUV coordinates).

Perhaps you want a palette function to return hex-codes; use \code{as_pal_hex()}.

Perhaps you want a palette function to act as a discrete-palette function;
use \code{as_pal_disc()}.

It is important to keep in mind that each of these functions returns a
\strong{function}.
}
\examples{
  # create LUV palette-function
  pal_blues <- palette_bezier(mat_luv_blues)

  # create hex palette-function
  pal_blues_hex <- as_pal_hex(pal_blues)

  # evaluate
  pal_blues_hex(seq(0, 1, by = 0.2))

  # create a discrete hex palette-function
  pal_blues_hex_disc <- as_pal_disc(pal_blues_hex)

  # evaluate
  pal_blues_hex_disc(6)

}
